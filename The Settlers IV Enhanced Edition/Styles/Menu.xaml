<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="\Themes\Light.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultMenu"
           TargetType="{x:Type Menu}">
        <Setter Property="FontSize"
                Value="{StaticResource ControlsFontSize}" />
        <Setter Property="FontWeight"
                Value="{StaticResource ControlsFontWeight}" />
        <Setter Property="FontFamily"
                Value="{StaticResource ControlsFontFamily}" />
        <Setter Property="Foreground"
                Value="{StaticResource MenuForeground}" />
        <Setter Property="Background"
                Value="{StaticResource MenuBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource MenuBorder}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border SnapsToDevicePixels="true"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,0,0,1"
                            Padding="{TemplateBinding Padding}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Menu}"
           TargetType="Menu"
           BasedOn="{StaticResource DefaultMenu}" />


    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
    <Style x:Key="MenuScrollButton"
           BasedOn="{x:Null}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode"
                Value="Hover" />
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="MinHeight"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel SnapsToDevicePixels="true"
                               Background="Transparent">
                        <Rectangle Fill="Transparent"
                                   x:Name="R1"
                                   Width="1"
                                   DockPanel.Dock="Right" />
                        <Rectangle Fill="Transparent"
                                   x:Name="B1"
                                   Height="1"
                                   DockPanel.Dock="Bottom" />
                        <Rectangle Fill="Transparent"
                                   x:Name="L1"
                                   Width="1"
                                   DockPanel.Dock="Left" />
                        <Rectangle Fill="Transparent"
                                   x:Name="T1"
                                   Height="1"
                                   DockPanel.Dock="Top" />
                        <ContentPresenter HorizontalAlignment="Center"
                                          Margin="2,2,2,2"
                                          x:Name="ContentContainer"
                                          VerticalAlignment="Center" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Fill"
                                    TargetName="R1"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter Property="Fill"
                                    TargetName="B1"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter Property="Fill"
                                    TargetName="L1"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter Property="Fill"
                                    TargetName="T1"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter Property="Margin"
                                    TargetName="ContentContainer"
                                    Value="3,3,1,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}"
           BasedOn="{x:Null}"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility"
                Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0"
                                Grid.Row="1">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton Focusable="false"
                                      Style="{StaticResource MenuScrollButton}"
                                      Grid.Column="0"
                                      Grid.Row="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0">
                                    <Binding Path="ComputedVerticalScrollBarVisibility"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                  Data="{StaticResource UpArrow}" />
                        </RepeatButton>
                        <RepeatButton Focusable="false"
                                      Style="{StaticResource MenuScrollButton}"
                                      Grid.Column="0"
                                      Grid.Row="2"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
                                    <Binding Path="ComputedVerticalScrollBarVisibility"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                  Data="{StaticResource DownArrow}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}"
                     TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Border SnapsToDevicePixels="True"
                    Padding="{TemplateBinding Padding}"
                    x:Name="OuterBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{StaticResource ControlsBorderThickness}">
                <DockPanel>
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Margin="5,0,5,0"
                                      x:Name="Icon"
                                      VerticalAlignment="Center"
                                      ContentSource="Icon" />
                    <Path Visibility="Collapsed"
                          Stretch="Uniform"
                          Fill="{TemplateBinding Foreground}"
                          Margin="5,0,5,0"
                          Width="12"
                          Height="12"
                          FlowDirection="LeftToRight"
                          x:Name="GlyphPanel"
                          VerticalAlignment="Center"
                          Data="{StaticResource Checkmark}" />
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Margin="5,0,5,0"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True" />
                </DockPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter Property="Visibility"
                        TargetName="GlyphPanel"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource HoverMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource HoverMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource HoverMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource KeyBoardFocusMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource KeyBoardFocusMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource KeyBoardFocusMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter Property="Opacity"
                        TargetName="Icon"
                        Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Border SnapsToDevicePixels="True"
                    Padding="{TemplateBinding Padding}"
                    x:Name="OuterBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{StaticResource ControlsBorderThickness}">
                <DockPanel>
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Margin="5,0,5,0"
                                      x:Name="Icon"
                                      VerticalAlignment="Center"
                                      ContentSource="Icon" />
                    <Path Visibility="Collapsed"
                          Stretch="UniformToFill"
                          Fill="{TemplateBinding Foreground}"
                          Margin="5,0,5,0"
                          Width="12"
                          Height="12"
                          FlowDirection="LeftToRight"
                          x:Name="GlyphPanel"
                          VerticalAlignment="Center"
                          Data="{StaticResource Checkmark}" />
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Margin="5,0,5,0"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True" />
                </DockPanel>
            </Border>
            <Popup Focusable="false"
                   AllowsTransparency="true"
                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   x:Name="PART_Popup">
                <Border Style="{StaticResource PopUpMenuBorderStyle}"
                        x:Name="Shdw">
                    <ContentControl x:Name="SubGroupBoxOuterBorder"
                                    IsTabStop="false"
                                    Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                      CanContentScroll="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Margin="2"
                                            Grid.IsSharedSizeScope="true"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle" />
                        </ScrollViewer>
                    </ContentControl>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter Property="PopupAnimation"
                        TargetName="PART_Popup"
                        Value="None" />
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter Property="Visibility"
                        TargetName="GlyphPanel"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource HoverMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource HoverMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource HoverMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource KeyBoardFocusMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource KeyBoardFocusMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource KeyBoardFocusMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter Property="Opacity"
                        TargetName="Icon"
                        Value=".5" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource SubMenuOpenMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource SubMenuOpenMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource SubMenuOpenMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter Property="Opacity"
                        TargetName="Icon"
                        Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Border SnapsToDevicePixels="True"
                    Padding="{TemplateBinding Padding}"
                    x:Name="OuterBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{StaticResource ControlsBorderThickness}">
                <DockPanel>
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Margin="5,0"
                                      x:Name="Icon"
                                      VerticalAlignment="Center"
                                      ContentSource="Icon" />
                    <Path Visibility="Hidden"
                          Fill="{TemplateBinding Foreground}"
                          Stretch="Uniform"
                          FlowDirection="LeftToRight"
                          x:Name="GlyphPanel"
                          Margin="5,0"
                          Width="12"
                          Height="12"
                          Data="{StaticResource Checkmark}" />
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Margin="5,0"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True" />
                    <TextBlock Visibility="Collapsed"
                               Margin="5,0"
                               Text="{TemplateBinding InputGestureText}" />
                    <Path Width="12"
                          Height="12"
                          Stretch="Uniform"
                          Stroke="{TemplateBinding Foreground}"
                          Margin="5,0"
                          VerticalAlignment="Center"
                          Data="{StaticResource DownArrowGeometry}"
                          RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <RotateTransform Angle="-90"></RotateTransform>
                        </Path.RenderTransform>
                    </Path>
                </DockPanel>
            </Border>
            <Popup Focusable="false"
                   AllowsTransparency="true"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Right"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   VerticalOffset="-3"
                   x:Name="PART_Popup">
                <Border Style="{StaticResource PopUpMenuBorderStyle}"
                        x:Name="Shdw">
                    <ContentControl x:Name="SubGroupBoxOuterBorder"
                                    IsTabStop="false"
                                    Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                      CanContentScroll="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Margin="2"
                                            Grid.IsSharedSizeScope="true"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle" />
                        </ScrollViewer>
                    </ContentControl>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter Property="PopupAnimation"
                        TargetName="PART_Popup"
                        Value="None" />
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter Property="Visibility"
                        TargetName="GlyphPanel"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource HoverMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource HoverMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource HoverMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource HoverMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource HoverMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource HoverMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter Property="Opacity"
                        TargetName="Icon"
                        Value=".5" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource SubMenuOpenMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource SubMenuOpenMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource SubMenuOpenMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter Property="Opacity"
                        TargetName="Icon"
                        Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}"
                     TargetType="{x:Type MenuItem}">
        <Grid>
            <Border SnapsToDevicePixels="True"
                    Padding="{TemplateBinding Padding}"
                    x:Name="OuterBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{StaticResource ControlsBorderThickness}">
                <DockPanel>
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Margin="0,0"
                                      x:Name="Icon"
                                      VerticalAlignment="Center"
                                      ContentSource="Icon"
                                      OpacityMask="{x:Null}" />
                    <Path Visibility="Hidden"
                          Fill="{StaticResource ButtonForeground}"
                          Margin="0,0"
                          Stretch="Uniform"
                          FlowDirection="LeftToRight"
                          x:Name="GlyphPanel"
                          Width="12"
                          Height="12"
                          Data="{StaticResource Checkmark}" />
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Margin="0,0"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True" />
                    <TextBlock Margin="0,0"
                               Text="{TemplateBinding InputGestureText}" />
                </DockPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter Property="Visibility"
                        TargetName="GlyphPanel"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource HoverMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource HoverMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource HoverMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource HoverMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource HoverMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource HoverMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter Property="Opacity"
                        TargetName="Icon"
                        Value=".5" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground"
                        Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter Property="Opacity"
                        TargetName="Icon"
                        Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DefaultMenuItem"
           TargetType="MenuItem">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="FontSize"
                Value="{StaticResource ControlsFontSize}" />
        <Setter Property="FontWeight"
                Value="{StaticResource ControlsFontWeight}" />
        <Setter Property="FontFamily"
                Value="{StaticResource ControlsFontFamily}" />
        <Setter Property="Foreground"
                Value="{StaticResource MenuItemForeground}" />
        <Setter Property="Background"
                Value="{StaticResource MenuItemBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource MenuItemBorder}" />
        <Setter Property="Padding"
                Value="{StaticResource ControlsPadding}" />
        <Setter Property="Template"
                Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type MenuItem}"
           TargetType="MenuItem"
           BasedOn="{StaticResource DefaultMenuItem}" />

    <Style x:Key="{x:Static ToolBar.MenuStyleKey}"
           TargetType="Menu"
           BasedOn="{StaticResource DefaultMenu}">
        <Setter Property="FontSize"
                Value="{StaticResource ControlsFontSizeSmall}" />
        <Setter Property="Foreground"
                Value="{StaticResource ButtonForeground}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Style.Resources>
            <Style TargetType="MenuItem"
                   BasedOn="{StaticResource DefaultMenuItem}" />
        </Style.Resources>
    </Style>
</ResourceDictionary>